{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riley\\\\source\\\\repos\\\\boeing-naturallanguageprocessing\\\\boeing\\\\src\\\\components\\\\Categories.js\";\nimport React from 'react';\nimport ModalPopup from './modal_popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Categories extends React.Component {\n  constructor() {\n    super();\n\n    this.isShowPopup = status => {\n      this.setState({\n        showModalPopup: status\n      });\n    };\n\n    this.renderWeightTable = () => {\n      const table = [];\n\n      for (let r = 0; r < Object.keys(this.props.weights).length; r++) {\n        table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"centered weight\" + (this.checkSelectedWeight(r) === true ? \" weight-selected\" : \"\"),\n          onClick: () => this.checkSelectedWeight(r) ? this.removedSelectedWeightTerm(r) : this.selectWeightTerm(r),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: Object.keys(this.props.weights)[r]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Object.values(this.props.weights)[r].frequency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Object.values(this.props.weights)[r].weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, r, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this));\n      }\n\n      return table;\n    };\n\n    this.selectWeightTerm = r => {\n      let selectedWeightTerms = this.state.selectedWeightTerms;\n      let newSelectedWeightTerm = r.toString();\n      selectedWeightTerms.push(newSelectedWeightTerm);\n      this.setState({\n        selectedWeightTerms: selectedWeightTerms\n      });\n    };\n\n    this.checkSelectedWeight = r => {\n      let check = r.toString();\n\n      if (this.state.selectedWeightTerms.includes(check)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.removedSelectedWeightTerm = r => {\n      let selectedWeightTerms = this.state.selectedWeightTerms;\n      let newSelectedWeightTerm = r.toString();\n\n      for (let x = 0; x < this.state.selectedWeightTerms.length; x++) {\n        if (this.state.selectedWeightTerms[x] === newSelectedWeightTerm) {\n          if (x == 0) {\n            selectedWeightTerms.shift();\n          } else {\n            selectedWeightTerms.splice(x, 1);\n          }\n        }\n      }\n\n      this.setState({\n        selectedWeightTerms: selectedWeightTerms\n      });\n    };\n\n    this.renderCatTable = () => {\n      const table = [];\n\n      for (let r = 0; r < Object.keys(this.props.categories).length; r++) {\n        table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => this.changeMode(r),\n          className: \"centered weight\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: Object.keys(this.props.categories)[r]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"termBox\",\n              children: this.renderCatTerms(r)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, r, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this));\n      }\n\n      return table;\n    };\n\n    this.renderCatTerms = r => {\n      const Terms = [];\n\n      if (this.state.cat === -1) {\n        for (let d = 0; d < Object.values(Object.values(this.props.categories)[r]).length; d++) {\n          Terms.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"term\",\n            children: [\" \", Object.keys(Object.values(this.props.categories)[r])[d], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 28\n          }, this));\n        }\n      } else {\n        for (let d = 0; d < Object.values(Object.values(this.props.categories)[r]).length; d++) {\n          Terms.push( /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"term2 btn2\" + (this.checkSelected(r, d) === true ? \" term2-selected\" : \"\"),\n            onClick: () => this.checkSelected(r, d) === false ? this.selectTerm(r, d) : this.removeSelectedTerm(r, d),\n            children: Object.keys(Object.values(this.props.categories)[r])[d]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this));\n        }\n      }\n\n      return Terms;\n    };\n\n    this.renderTermTable = () => {\n      const table = [];\n      table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"termBox\",\n            children: this.renderCatTerms(this.state.cat)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this));\n      return table;\n    };\n\n    this.selectTerm = (r, d) => {\n      let selectedTerms = this.state.selectedTerms;\n      let newSelectedTerm = r.toString() + d.toString();\n      selectedTerms.push(newSelectedTerm);\n      this.setState({\n        selectedTerms: selectedTerms\n      });\n    };\n\n    this.removeSelectedTerm = (r, d) => {\n      let selectedTerms = this.state.selectedTerms;\n      let newSelectedTerm = r.toString() + d.toString();\n\n      for (let x = 0; x < this.state.selectedTerms.length; x++) {\n        if (this.state.selectedTerms[x] === newSelectedTerm) {\n          if (x == 0) {\n            selectedTerms.shift();\n          } else {\n            selectedTerms.splice(x, 1);\n          }\n        }\n      }\n\n      this.setState({\n        selectedTerms: selectedTerms\n      });\n    };\n\n    this.checkSelected = (r, d) => {\n      let check = r.toString() + d.toString();\n\n      if (this.state.selectedTerms.includes(check)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.changeMode = r => {\n      if (this.state.mode === \"categories\") {\n        this.setState({\n          mode: \"cat\",\n          cat: r\n        });\n      } else {\n        this.setState({\n          mode: \"categories\",\n          cat: r\n        });\n      }\n    };\n\n    this.clearSelected = () => {\n      this.setState({\n        selectedTerms: [],\n        selectedWeightTerms: []\n      });\n    };\n\n    this.addToWeights = () => {\n      this.props.addToWeights(this.state.selectedTerms);\n      this.setState({\n        selectedTerms: []\n      });\n    };\n\n    this.addToCategory = () => {\n      this.props.addToCategory(this.state.selectedWeightTerms, this.state.cat);\n      this.setState({\n        selectedWeightTerms: []\n      });\n    };\n\n    this.deleteCat = () => {\n      this.props.deleteCategory(this.state.cat);\n      this.changeMode(-1);\n    };\n\n    this.saveCategories = () => {\n      this.props.saveCategories(this.state.categories);\n    };\n\n    this.state = {\n      showModalPopup: false,\n      mode: \"categories\",\n      cat: -1,\n      selectedTerms: [],\n      selectedWeightTerms: []\n    };\n  } //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  //                       Modal Popup Functions\n  //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  // Displays modal popup\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(ModalPopup, {\n        showModalPopup: this.state.showModalPopup,\n        onPopupClose: this.isShowPopup,\n        createCategory: this.props.createCategory,\n        categories: this.props.categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pageTitle\",\n        children: \" Step 3: Categories \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categoriesUploadSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categoriesLeft\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"centered\",\n              children: \" TERMS \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"centered\",\n              children: \" Select terms to move to category \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-hover tableBody tl\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"table-light\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"cell-align-middle centered tableHeader\",\n                    children: \"NOUN\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"cell-align-middle centered tableHeader\",\n                    children: \"FREQUENCY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"cell-align-middle centered tableHeader\",\n                    children: \"WEIGHT\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: Object.keys(this.props.weights).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 41\n                }, this) : this.renderWeightTable()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categoriesCenter\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"centered\",\n              children: \" Edit Categories \\\\/ \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), \"\\xA0\", this.state.cat === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.isShowPopup(true),\n              children: \"Create New Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.changeMode(-1),\n              children: \"Exit Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this), \"\\xA0\", this.state.cat === -1 ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.deleteCat(),\n              children: \"Delete Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this), \"\\xA0\", this.state.cat === -1 ? null : this.state.selectedTerms.length == 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              onClick: () => this.addToWeights(),\n              className: \"btn\",\n              children: \"<<<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.addToWeights(),\n              className: \"btn\",\n              children: \"<<<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 37\n            }, this), \"\\xA0\", this.state.cat === -1 ? null : this.state.selectedWeightTerms.length == 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              className: \"btn\",\n              onClick: () => this.addToCategory(),\n              children: \">>>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.addToCategory(),\n              children: \">>>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this), \"\\xA0\", this.state.selectedWeightTerms.length != 0 || this.state.selectedTerms.length != 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.clearSelected(),\n              children: \"Clear Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              className: \"btn\",\n              onClick: () => this.clearSelected(),\n              children: \"Clear Selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), \"\\xA0\", this.state.cat === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.saveCategories(),\n              children: \"Save Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categoriesRight\",\n            children: this.state.mode === \"categories\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"centered\",\n                children: \" CATEGORIES \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"centered\",\n                children: \" Select a category to edit \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-hover tableBody tr\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"table-light\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"cell-align-middle centered tableHeader\",\n                      children: \"Category\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"cell-align-middle centered tableHeader\",\n                      children: \"Terms\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: Object.keys(this.props.categories).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 49\n                  }, this) : this.renderCatTable()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"centered\",\n                children: [\" \", Object.keys(this.props.categories)[this.state.cat], \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"centered\",\n                children: \" Select terms to remove from category \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table tableBody tr\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"table-light\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"cell-align-middle centered tableHeader\",\n                      children: \"Terms\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: Object.keys(this.props.categories).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 53\n                  }, this) : this.renderTermTable()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modeBtn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn bottom4\",\n              onClick: () => this.props.prevPage(),\n              children: \" Back \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"right btn bottom4\",\n              onClick: () => this.props.nextPage(),\n              children: \" Forward \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Categories;","map":{"version":3,"sources":["C:/Users/riley/source/repos/boeing-naturallanguageprocessing/boeing/src/components/Categories.js"],"names":["React","ModalPopup","Categories","Component","constructor","isShowPopup","status","setState","showModalPopup","renderWeightTable","table","r","Object","keys","props","weights","length","push","checkSelectedWeight","removedSelectedWeightTerm","selectWeightTerm","values","frequency","weight","selectedWeightTerms","state","newSelectedWeightTerm","toString","check","includes","x","shift","splice","renderCatTable","categories","changeMode","renderCatTerms","Terms","cat","d","checkSelected","selectTerm","removeSelectedTerm","renderTermTable","selectedTerms","newSelectedTerm","mode","clearSelected","addToWeights","addToCategory","deleteCat","deleteCategory","saveCategories","render","createCategory","prevPage","nextPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ModalPopup from './modal_popup';\r\n\r\nclass Categories extends React.Component {\r\n\r\n    constructor() {  \r\n        super();  \r\n        this.state = {  \r\n          showModalPopup: false,\r\n          mode: \"categories\",\r\n          cat: -1,\r\n          selectedTerms: [],\r\n          selectedWeightTerms: []\r\n        }  \r\n    } \r\n\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    //                       Modal Popup Functions\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n    // Displays modal popup\r\n    isShowPopup = (status) => {  \r\n        this.setState({ showModalPopup: status});  \r\n    };  \r\n\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    //                   Left Side (Terms) Functions\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n    // Renders the weight table\r\n    renderWeightTable = () => {\r\n        const table = []\r\n        for (let r = 0; r < Object.keys(this.props.weights).length; r++) {\r\n          table.push(\r\n            <tr className={\"centered weight\" + (this.checkSelectedWeight(r) === true ? \" weight-selected\" : \"\")} key={r} \r\n                onClick={() => (this.checkSelectedWeight(r) ? this.removedSelectedWeightTerm(r) : this.selectWeightTerm(r))}>\r\n              <td>{Object.keys(this.props.weights)[r]}</td>\r\n              <td>{Object.values(this.props.weights)[r].frequency}</td>\r\n              <td>{Object.values(this.props.weights)[r].weight}</td>\r\n            </tr>\r\n          )\r\n        }\r\n        return table;\r\n    }\r\n\r\n    // User has selected a term from the weights table\r\n    selectWeightTerm = (r) => {\r\n        let selectedWeightTerms = this.state.selectedWeightTerms\r\n        let newSelectedWeightTerm = r.toString()\r\n        selectedWeightTerms.push(newSelectedWeightTerm)\r\n        this.setState({selectedWeightTerms: selectedWeightTerms })\r\n    }\r\n\r\n    // Checks which terms in the weights table user has selected currently\r\n    checkSelectedWeight = (r) => {\r\n        let check = r.toString()\r\n        if (this.state.selectedWeightTerms.includes(check)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // User has deselected a term from the weights table\r\n    removedSelectedWeightTerm = (r) => {\r\n        let selectedWeightTerms = this.state.selectedWeightTerms\r\n        let newSelectedWeightTerm = r.toString()\r\n        for (let x = 0; x < this.state.selectedWeightTerms.length; x++) {\r\n            if (this.state.selectedWeightTerms[x] === newSelectedWeightTerm) {\r\n                if (x == 0) {\r\n                    selectedWeightTerms.shift()\r\n                } else {\r\n                    selectedWeightTerms.splice(x, 1)\r\n                }\r\n            }\r\n        }\r\n        this.setState({selectedWeightTerms: selectedWeightTerms})\r\n    }\r\n\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    //                 Right Side (Categories) Functions\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    \r\n    // Renders all categories in a table\r\n    renderCatTable = () => {\r\n        const table = []\r\n        for (let r = 0; r < Object.keys(this.props.categories).length; r++) {\r\n            table.push(\r\n                <tr onClick={() => this.changeMode(r)} className=\"centered weight\" key={r}>\r\n                    <td>\r\n                        {Object.keys(this.props.categories)[r]}\r\n                    </td>\r\n                    <td>\r\n                        <div className=\"termBox\">\r\n                            {this.renderCatTerms(r)}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        return table;\r\n    }\r\n\r\n    // Renders terms in each category\r\n    renderCatTerms = (r) => {\r\n        const Terms = [];\r\n        if (this.state.cat === -1) {\r\n            for (let d = 0; d < Object.values(Object.values(this.props.categories)[r]).length; d++) {\r\n                Terms.push(<div className=\"term\"> {Object.keys(Object.values(this.props.categories)[r])[d]} </div>)\r\n            }\r\n        } else {\r\n            for (let d = 0; d < Object.values(Object.values(this.props.categories)[r]).length; d++) {\r\n                Terms.push(\r\n                    <button className={\"term2 btn2\" + (this.checkSelected(r, d) === true ? \" term2-selected\": \"\")}\r\n                        onClick={ () => (this.checkSelected(r, d) === false ? this.selectTerm(r, d) : this.removeSelectedTerm(r, d)) }> \r\n                        {Object.keys(Object.values(this.props.categories)[r])[d]} \r\n                    </button>\r\n                )\r\n            }\r\n        }\r\n        return Terms\r\n    }\r\n\r\n    // Renders selected category table\r\n    renderTermTable = () => {\r\n        const table = []\r\n        table.push(\r\n            <tr className=\"centered\" key={0}>\r\n                <td>\r\n                    <div className=\"termBox\">\r\n                        {this.renderCatTerms(this.state.cat)}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n        return table;\r\n    }\r\n\r\n    // User has selected a term from a category\r\n    selectTerm = (r, d) => {\r\n        let selectedTerms = this.state.selectedTerms\r\n        let newSelectedTerm = r.toString() + d.toString()\r\n        selectedTerms.push(newSelectedTerm)\r\n        this.setState({selectedTerms: selectedTerms })\r\n    }\r\n\r\n    // User has deslected a term from a category\r\n    removeSelectedTerm = (r, d) => {\r\n        let selectedTerms = this.state.selectedTerms\r\n        let newSelectedTerm = r.toString() + d.toString()\r\n        for (let x = 0; x < this.state.selectedTerms.length; x++) {\r\n            if (this.state.selectedTerms[x] === newSelectedTerm) {\r\n                if (x == 0) {\r\n                    selectedTerms.shift()\r\n                } else {\r\n                    selectedTerms.splice(x, 1)\r\n                }\r\n            }\r\n        }\r\n        this.setState({selectedTerms: selectedTerms })\r\n    }\r\n\r\n    // Checks which terms in the category the user has selected currently\r\n    checkSelected = (r, d) => {\r\n        let check = r.toString() + d.toString()\r\n        if (this.state.selectedTerms.includes(check)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    //                    Center (Buttons) Functions\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n    // Changes the mode to display the categories and buttons\r\n    changeMode = (r) => {\r\n        if (this.state.mode === \"categories\") {\r\n            this.setState({mode: \"cat\",\r\n                           cat: r})\r\n        } else {\r\n            this.setState({mode: \"categories\",\r\n                           cat: r})\r\n        }\r\n    }\r\n\r\n    // Clears all selected terms\r\n    clearSelected = () => {\r\n        this.setState({selectedTerms: [],\r\n                       selectedWeightTerms: []})\r\n    }\r\n\r\n    // Removes a selected term from category and adds it back to weights list\r\n    addToWeights = () => {\r\n        this.props.addToWeights(this.state.selectedTerms)\r\n        this.setState({selectedTerms: []})\r\n    }\r\n\r\n    // Removed a selected term from weights list and adds it to a category\r\n    addToCategory = () => {\r\n        this.props.addToCategory(this.state.selectedWeightTerms, this.state.cat)\r\n        this.setState({selectedWeightTerms: []})\r\n    }\r\n\r\n    // Deletes a catergory and adds terms back to weight\r\n    deleteCat = () => {\r\n        this.props.deleteCategory(this.state.cat)\r\n        this.changeMode(-1)\r\n    }\r\n\r\n    //sends the categories to the flask route so we can save on csv\r\n    saveCategories = () => {\r\n        this.props.saveCategories(this.state.categories)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                <ModalPopup showModalPopup={this.state.showModalPopup}  \r\n                            onPopupClose={this.isShowPopup}\r\n                            createCategory={this.props.createCategory}\r\n                            categories={this.props.categories}/>\r\n                <h2 className=\"pageTitle\"> Step 3: Categories </h2>\r\n                <div className=\"pageBox\">\r\n                    <div className=\"categoriesUploadSection\">\r\n                        <div className=\"categoriesLeft\">\r\n                            <h1 className=\"centered\"> TERMS </h1>\r\n                            <h6 className=\"centered\"> Select terms to move to category </h6>\r\n                            <table className=\"table table-hover tableBody tl\">\r\n                                <thead className=\"table-light\">\r\n                                    <tr>\r\n                                        <th className=\"cell-align-middle centered tableHeader\">NOUN</th>\r\n                                        <th className=\"cell-align-middle centered tableHeader\">FREQUENCY</th>\r\n                                        <th className=\"cell-align-middle centered tableHeader\">WEIGHT</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Object.keys(this.props.weights).length === 0 ?\r\n                                        <tr>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        : \r\n                                        this.renderWeightTable()\r\n                                    } \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div className=\"categoriesCenter\">\r\n                            <h6 className=\"centered\"> Edit Categories \\/ </h6>\r\n                            &nbsp;\r\n                            {this.state.cat === -1 ? \r\n                                <button className=\"btn\" onClick={() => this.isShowPopup(true)}>\r\n                                    Create New Category\r\n                                </button> \r\n                                : \r\n                                <button className=\"btn\" onClick={() => this.changeMode(-1)}>\r\n                                    Exit Category\r\n                                </button>\r\n                            }\r\n                            &nbsp;\r\n                            {this.state.cat === -1 ? \r\n                                null \r\n                                : \r\n                                <button className=\"btn\" onClick={() => this.deleteCat()}>\r\n                                    Delete Category\r\n                                </button>\r\n                            }\r\n                            &nbsp;\r\n                            {this.state.cat === -1 ?\r\n                                null \r\n                                :\r\n                                this.state.selectedTerms.length == 0 ?\r\n                                    <button disabled={true} onClick={() => this.addToWeights()} className=\"btn\">\r\n                                        &lt;&lt;&lt;\r\n                                    </button> \r\n                                    :\r\n                                    <button onClick={() => this.addToWeights()} className=\"btn\">\r\n                                        &lt;&lt;&lt;\r\n                                    </button>\r\n                            }\r\n                            &nbsp;\r\n                            {this.state.cat === -1 ?\r\n                                null \r\n                                :\r\n                                this.state.selectedWeightTerms.length == 0 ?\r\n                                    <button disabled={true} className=\"btn\" onClick={() => this.addToCategory()}>\r\n                                        &gt;&gt;&gt;\r\n                                    </button> \r\n                                    :\r\n                                    <button className=\"btn\" onClick={() => this.addToCategory()}>\r\n                                        &gt;&gt;&gt;\r\n                                    </button>\r\n                            }\r\n                            &nbsp;\r\n                            {this.state.selectedWeightTerms.length != 0 || this.state.selectedTerms.length != 0 ?\r\n                                <button className=\"btn\" onClick={() => this.clearSelected()}>\r\n                                    Clear Selected\r\n                                </button> \r\n                                :\r\n                                <button disabled={true} className=\"btn\" onClick={() => this.clearSelected()}>\r\n                                    Clear Selected\r\n                                </button>\r\n                            }\r\n                            &nbsp;\r\n                            {this.state.cat === -1  ?\r\n                                <button className=\"btn\" onClick={() => this.saveCategories()}>\r\n                                    Save Categories\r\n                                </button> \r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"categoriesRight\">\r\n                            {this.state.mode === \"categories\" ?\r\n                                <div>\r\n                                    <h1 className=\"centered\"> CATEGORIES </h1>\r\n                                    <h6 className=\"centered\"> Select a category to edit </h6>\r\n                                    <table className=\"table table-hover tableBody tr\">\r\n                                        <thead className=\"table-light\">\r\n                                            <tr>\r\n                                                <th className=\"cell-align-middle centered tableHeader\">Category</th>\r\n                                                <th className=\"cell-align-middle centered tableHeader\">Terms</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {Object.keys(this.props.categories).length === 0 ?\r\n                                                <tr>\r\n                                                    <td></td>\r\n                                                </tr>\r\n                                                : this.renderCatTable()\r\n                                            } \r\n                                        </tbody>\r\n                                    </table> \r\n                                </div> :\r\n                                <div>\r\n                                    <h1 className=\"centered\"> {Object.keys(this.props.categories)[this.state.cat]} </h1>\r\n                                    <h6 className=\"centered\"> Select terms to remove from category </h6>\r\n                                    <table className=\"table tableBody tr\">\r\n                                            <thead className=\"table-light\">\r\n                                                <tr>\r\n                                                    <th className=\"cell-align-middle centered tableHeader\">Terms</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {Object.keys(this.props.categories).length === 0 ?\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    : this.renderTermTable()\r\n                                                } \r\n                                            </tbody>\r\n                                    </table> \r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"modeBtn\">\r\n                            <button className=\"btn bottom4\" onClick={() => this.props.prevPage()}> Back </button>\r\n                            <button className=\"right btn bottom4\" onClick={() => this.props.nextPage()}> Forward </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}