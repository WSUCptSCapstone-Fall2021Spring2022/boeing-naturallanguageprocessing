{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riley\\\\source\\\\repos\\\\boeing-naturallanguageprocessing\\\\boeing\\\\src\\\\components\\\\modal_popup.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Modal } from 'react-bootstrap'; //import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// Popup modal to display badge information\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isShowModal = status => {\n      this.handleClose();\n      this.setState({\n        showModal: status\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.onPopupClose(false);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        Category: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (Object.values(Object.keys(this.props.categories)).indexOf(this.state.Category) > -1) {\n        console.log(\"Name already used\");\n      } else {\n        let name = {\n          Category: this.state.Category\n        };\n        this.props.createCategory(name);\n        this.handleClose();\n      }\n    };\n\n    this.state = {\n      showModal: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.props.showModalPopup,\n        onHide: this.handleClose,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"sign-in-title\",\n            children: \"Create a new category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"string\",\n            placeholder: \"New category name...\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleSubmit(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModalPopup;","map":{"version":3,"sources":["C:/Users/riley/source/repos/boeing-naturallanguageprocessing/boeing/src/components/modal_popup.jsx"],"names":["React","Component","Fragment","Modal","ModalPopup","constructor","props","isShowModal","status","handleClose","setState","showModal","onPopupClose","handleChange","event","Category","target","value","handleSubmit","Object","values","keys","categories","indexOf","state","console","log","name","createCategory","render","showModalPopup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB,C,CACA;AAEA;;;;AACA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,WAPmB,GAOJC,MAAD,IAAY;AACtB,WAAKC,WAAL;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEH;AAAb,OAAd;AACH,KAVkB;;AAAA,SAYnBC,WAZmB,GAYL,MAAM;AAChB,WAAKH,KAAL,CAAWM,YAAX,CAAwB,KAAxB;AACH,KAdkB;;AAAA,SAgBnBC,YAhBmB,GAgBHC,KAAD,IAAW;AACtB,WAAKJ,QAAL,CAAc;AAACK,QAAAA,QAAQ,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AACH,KAlBkB;;AAAA,SAqBnBC,YArBmB,GAqBJ,MAAM;AACjB,UAAIC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,IAAP,CAAY,KAAKf,KAAL,CAAWgB,UAAvB,CAAd,EAAkDC,OAAlD,CAA0D,KAAKC,KAAL,CAAWT,QAArE,IAAiF,CAAC,CAAtF,EAAyF;AACrFU,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,OAFD,MAEO;AACH,YAAIC,IAAI,GAAG;AAACZ,UAAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWT;AAAtB,SAAX;AACA,aAAKT,KAAL,CAAWsB,cAAX,CAA0BD,IAA1B;AACA,aAAKlB,WAAL;AACH;AACJ,KA7BkB;;AAEf,SAAKe,KAAL,GAAa;AACTb,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AA0BDkB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWwB,cAAxB;AAAwC,QAAA,MAAM,EAAE,KAAKrB,WAArD;AACI,QAAA,IAAI,EAAC,IADT;AAEI,2BAAgB,+BAFpB;AAGI,QAAA,QAAQ,MAHZ;AAAA,gCAII,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACI,QAAC,KAAD,CAAO,KAAP;AAAa,YAAA,EAAE,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eASI,QAAC,KAAD,CAAO,IAAP;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,WAAW,EAAC,sBAAjC;AAAwD,YAAA,QAAQ,EAAE,KAAKI;AAAvE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKK,YAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AArD8B;;AAwDnC,eAAgBd,UAAhB","sourcesContent":["import React, { Component, Fragment } from 'react';  \r\nimport { Modal } from 'react-bootstrap';  \r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n// Popup modal to display badge information\r\nclass ModalPopup extends Component {  \r\n    constructor(props) {  \r\n        super(props);  \r\n        this.state = {  \r\n            showModal: false  \r\n        };  \r\n    }  \r\n  \r\n    isShowModal = (status) => {  \r\n        this.handleClose();  \r\n        this.setState({ showModal: status });  \r\n    }  \r\n  \r\n    handleClose = () => {  \r\n        this.props.onPopupClose(false);  \r\n    }  \r\n\r\n    handleChange = (event) => {\r\n        this.setState({Category: event.target.value});\r\n    }\r\n\r\n    // Creates a new category with the given input name\r\n    handleSubmit = () => {\r\n        if (Object.values(Object.keys(this.props.categories)).indexOf(this.state.Category) > -1) {\r\n            console.log(\"Name already used\")\r\n        } else {\r\n            let name = {Category: this.state.Category}\r\n            this.props.createCategory(name);\r\n            this.handleClose();\r\n        }\r\n    }\r\n  \r\n    render() {  \r\n        return (  \r\n            <Fragment>  \r\n                <Modal show={this.props.showModalPopup} onHide={this.handleClose}\r\n                    size=\"lg\"  \r\n                    aria-labelledby=\"contained-modal-title-vcenter\"  \r\n                    centered>  \r\n                    <Modal.Header closeButton>  \r\n                        <Modal.Title id=\"sign-in-title\">  \r\n                            Create a new category\r\n                         </Modal.Title>  \r\n                    </Modal.Header>  \r\n                    <Modal.Body>  \r\n                        <input type=\"string\" placeholder=\"New category name...\" onChange={this.handleChange}></input>\r\n                        <button onClick={() => this.handleSubmit()}>\r\n                            Submit\r\n                        </button>\r\n                    </Modal.Body>\r\n                </Modal>  \r\n            </Fragment>  \r\n        );  \r\n    }  \r\n}  \r\n  \r\nexport default (ModalPopup);"]},"metadata":{},"sourceType":"module"}