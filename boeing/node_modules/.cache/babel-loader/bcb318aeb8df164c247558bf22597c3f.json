{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\riley\\\\source\\\\repos\\\\boeing-naturallanguageprocessing\\\\boeing\\\\src\\\\components\\\\Terms.js\";\nimport React from 'react';\nimport ModalPopup from './modal_terms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Terms extends React.Component {\n  //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  //                       Modal Popup Functions\n  //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  constructor(props) {\n    super(props);\n\n    this.isShowPopup = (status, r) => {\n      // if (this.checkSelectedTerm(r)) {\n      //     this.selectTerm(r)\n      // }\n      this.setState({\n        showModalPopup: status,\n        modalTerm: r\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.selectTerm = r => {\n      let selectedTerms = this.state.selectedTerms;\n      let newSelectedTerm = r; //.toString()\n\n      selectedTerms.push(newSelectedTerm);\n      this.setState({\n        selectedTerms: selectedTerms\n      });\n    };\n\n    this.checkSelectedTerm = r => {\n      let check = r; //.toString()\n\n      if (this.state.selectedTerms.includes(check)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.removedSelectedTerm = r => {\n      let selectedTerms = this.state.selectedTerms;\n      let newSelectedTerm = r; //.toString()\n\n      for (let x = 0; x < this.state.selectedTerms.length; x++) {\n        if (this.state.selectedTerms[x] === newSelectedTerm) {\n          if (x == 0) {\n            selectedTerms.shift();\n          } else {\n            selectedTerms.splice(x, 1);\n          }\n        }\n      }\n\n      this.setState({\n        selectedTerms: selectedTerms\n      });\n    };\n\n    this.renderTable = () => {\n      const table = []; //for (let r = 0; r < Object.keys(this.props.weights).length; r++) {\n\n      if (this.state.page * 100 + 100 > Object.keys(this.props.weights).length) {\n        for (let r = this.state.page * 100; r < Object.keys(this.props.weights).length; r++) {\n          table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"centered weight\" + (this.checkSelectedTerm(r) === true ? \" weight-selected\" : \"\"),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r),\n              children: Object.keys(this.props.weights)[r]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r),\n              children: Object.values(this.props.weights)[r].frequency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r),\n              children: Object.values(this.props.weights)[r].weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => this.isShowPopup(true, r),\n                children: \" Sentences \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, r, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this));\n        }\n      } else {\n        for (let r = this.state.page * 100; r < this.state.page * 100 + 100; r++) {\n          table.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"centered weight\" + (this.checkSelectedTerm(r) === true ? \" weight-selected\" : \"\"),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r),\n              children: Object.keys(this.props.weights)[r]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r),\n              children: Object.values(this.props.weights)[r].frequency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r),\n              children: Object.values(this.props.weights)[r].weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => this.isShowPopup(true, r),\n                children: \" Sentences \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)]\n          }, r, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this));\n        }\n      }\n\n      return table;\n    };\n\n    this.clearSelected = () => {\n      this.setState({\n        selectedTerms: []\n      });\n    };\n\n    this.deleteTerms = () => {\n      this.props.deleteTerms(this.state.selectedTerms);\n      this.clearSelected();\n    };\n\n    this.page = direction => {\n      if (direction == 'next') {\n        this.setState({\n          page: this.state.page + 1\n        });\n      } else {\n        this.setState({\n          page: this.state.page - 1\n        });\n      }\n    };\n\n    this.state = {\n      selectedTerms: [],\n      page: 0,\n      showModalPopup: false\n    };\n  } // submitOutput = () => {\n  //     this.props.setOutput(this.state.output)\n  // }\n  // componentDidMount = () => {\n  //     this.props.Parser()\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(ModalPopup, {\n        showModalPopup: this.state.showModalPopup,\n        onPopupClose: this.isShowPopup,\n        term: Object.keys(this.props.weights)[this.state.modalTerm],\n        sentences: Object.values(this.props.weights)[this.state.modalTerm]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pageTitle\",\n        children: \" Step 2: Term Extraction \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"termUploadSection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modeBtn\",\n            children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.props.Parser(),\n              children: \" Get Weights: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.props.loadCorpus(),\n              children: \" Load Weights: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modeBtn\",\n            children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.props.saveWeight(),\n              children: \" Save Weights: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"centered\",\n            children: \" Select terms to remove \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-hover tableBody t1\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"cell-align-middle centered tableHeader\",\n                  children: \"NOUN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"cell-align-middle centered tableHeader\",\n                  children: \"FREQUENCY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"cell-align-middle centered tableHeader\",\n                  children: \"WEIGHT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.keys(this.props.weights).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this) : this.renderTable()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnLeft\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bottom3 btn\",\n              onClick: () => this.props.prevPage(),\n              children: \" Back \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnCenter centered\",\n            children: [this.state.page == 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              disabled: true,\n              onClick: () => this.page('pervious'),\n              children: \" Previous: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.page('pervious'),\n              children: \" Previous: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), this.state.page, this.state.page * 100 + 100 < Object.keys(this.props.weights).length ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => this.page('next'),\n              children: \" Next: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              disabled: true,\n              onClick: () => this.page('next'),\n              children: \" Next: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btnRight\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"right bottom3 btn\",\n              onClick: () => {\n                this.props.nextPage();\n              },\n              children: \" Forward \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), this.state.selectedTerms.length != 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"right bottom3 btn\",\n              onClick: () => this.clearSelected(),\n              children: \" Clear Selected \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              className: \"right bottom3 btn\",\n              onClick: () => this.clearSelected(),\n              children: \" Clear Selected \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this), this.state.selectedTerms.length != 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"right bottom3 btn\",\n              onClick: () => this.deleteTerms(),\n              children: \" Delete Terms \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              className: \"right bottom3 btn\",\n              onClick: () => this.deleteTerms(),\n              children: \" Delete Terms \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Terms;","map":{"version":3,"sources":["C:/Users/riley/source/repos/boeing-naturallanguageprocessing/boeing/src/components/Terms.js"],"names":["React","ModalPopup","Terms","Component","constructor","props","isShowPopup","status","r","setState","showModalPopup","modalTerm","handleChange","event","target","name","value","selectTerm","selectedTerms","state","newSelectedTerm","push","checkSelectedTerm","check","includes","removedSelectedTerm","x","length","shift","splice","renderTable","table","page","Object","keys","weights","values","frequency","weight","clearSelected","deleteTerms","direction","render","Parser","loadCorpus","saveWeight","prevPage","nextPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ModalPopup from './modal_terms';\r\n\r\nclass Terms extends React.Component {\r\n\r\n     //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    //                       Modal Popup Functions\r\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    isShowPopup = (status, r) => {  \r\n\r\n        // if (this.checkSelectedTerm(r)) {\r\n        //     this.selectTerm(r)\r\n        // }\r\n\r\n        this.setState({showModalPopup: status,\r\n                       modalTerm: r});\r\n    };  \r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedTerms: [],\r\n                    page: 0,\r\n                    showModalPopup: false}\r\n    }\r\n   \r\n    // submitOutput = () => {\r\n    //     this.props.setOutput(this.state.output)\r\n    // }\r\n\r\n    // componentDidMount = () => {\r\n    //     this.props.Parser()\r\n    // }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    // User has selected a term from the weights table\r\n    selectTerm = (r) => {\r\n        let selectedTerms = this.state.selectedTerms\r\n        let newSelectedTerm = r//.toString()\r\n        selectedTerms.push(newSelectedTerm)\r\n        this.setState({selectedTerms: selectedTerms })\r\n    }\r\n\r\n    // Checks which terms in the weights table user has selected currently\r\n    checkSelectedTerm = (r) => {\r\n        let check = r//.toString()\r\n        if (this.state.selectedTerms.includes(check)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // User has deselected a term from the weights table\r\n    removedSelectedTerm = (r) => {\r\n        let selectedTerms = this.state.selectedTerms\r\n        let newSelectedTerm = r//.toString()\r\n        for (let x = 0; x < this.state.selectedTerms.length; x++) {\r\n            if (this.state.selectedTerms[x] === newSelectedTerm) {\r\n                if (x == 0) {\r\n                    selectedTerms.shift()\r\n                } else {\r\n                    selectedTerms.splice(x, 1)\r\n                }\r\n            }\r\n        }\r\n        this.setState({selectedTerms: selectedTerms})\r\n    }\r\n\r\n    // // Renders term table\r\n    // renderTable = () => {\r\n    //     const table = []\r\n    //     for (let r = 0; r < Object.keys(this.props.dict).length; r++) {\r\n    //       table.push(\r\n    //         <tr key = {r} className={\"centered weight\" + (this.checkSelectedTerm(r) === true ? \" weight-selected\" : \"\")}\r\n    //             onClick={() => (this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r))}>\r\n    //           <td>{Object.keys(this.props.dict)[r]}</td>\r\n    //           <td>{Object.values(this.props.dict)[r]}</td>\r\n    //         </tr>\r\n    //       )\r\n    //     }\r\n    //     return table;\r\n    // }\r\n\r\n    // Renders the weight table\r\n    renderTable = () => {\r\n        const table = []\r\n        //for (let r = 0; r < Object.keys(this.props.weights).length; r++) {\r\n        if ((this.state.page * 100) + 100 > Object.keys(this.props.weights).length) {\r\n\r\n            for (let r = this.state.page * 100; r < Object.keys(this.props.weights).length; r++) {\r\n        \r\n                table.push(\r\n                    <tr key = {r} className={\"centered weight\" + (this.checkSelectedTerm(r) === true ? \" weight-selected\" : \"\")}>\r\n                        <td onClick={() => (this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r))}>{Object.keys(this.props.weights)[r]}</td>\r\n                        <td onClick={() => (this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r))}>{Object.values(this.props.weights)[r].frequency}</td>\r\n                        <td onClick={() => (this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r))}>{Object.values(this.props.weights)[r].weight}</td>\r\n                        <td><button className=\"btn\" onClick={() => this.isShowPopup(true, r)}> Sentences </button></td>\r\n                    </tr>\r\n                )\r\n            }\r\n\r\n        } else {\r\n\r\n            for (let r = this.state.page * 100; r < (this.state.page * 100) + 100; r++) {\r\n            \r\n                table.push(\r\n                    <tr key = {r} className={\"centered weight\" + (this.checkSelectedTerm(r) === true ? \" weight-selected\" : \"\")}>\r\n                        <td onClick={() => (this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r))}>{Object.keys(this.props.weights)[r]}</td>\r\n                        <td onClick={() => (this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r))}>{Object.values(this.props.weights)[r].frequency}</td>\r\n                        <td onClick={() => (this.checkSelectedTerm(r) ? this.removedSelectedTerm(r) : this.selectTerm(r))}>{Object.values(this.props.weights)[r].weight}</td>\r\n                        <td><button className=\"btn\" onClick={() => this.isShowPopup(true, r)}> Sentences </button></td>\r\n                    </tr>\r\n                )\r\n            }\r\n\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n    // Clears selected terms\r\n    clearSelected = () => {\r\n        this.setState({selectedTerms: []})\r\n    }\r\n\r\n    // Autocompletes output location to recommened location\r\n    // recommend = () => {\r\n    //     this.props.setOutput(\"C:\\\\Users\\\\blcsi\\\\OneDrive\\\\Desktop\\\\boeing-naturallanguageprocessing\\\\Parser\\\\output\")\r\n    // }\r\n\r\n    deleteTerms = () => {\r\n        this.props.deleteTerms(this.state.selectedTerms)\r\n        this.clearSelected()\r\n    }\r\n\r\n    page = (direction) => {\r\n        if (direction == 'next') {\r\n            this.setState({page: this.state.page + 1})\r\n        } else {\r\n            this.setState({page: this.state.page - 1})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                 <ModalPopup showModalPopup={this.state.showModalPopup}  \r\n                            onPopupClose={this.isShowPopup}\r\n                            term={Object.keys(this.props.weights)[this.state.modalTerm]}\r\n                            sentences={Object.values(this.props.weights)[this.state.modalTerm]}\r\n                />\r\n                <h2 className=\"pageTitle\"> Step 2: Term Extraction </h2>\r\n                <div className=\"pageBox\">\r\n                    <div className=\"termUploadSection\">\r\n                        {/* &nbsp;\r\n                        &nbsp; */}\r\n                        <div className=\"modeBtn\">\r\n                            &nbsp;\r\n                            {/* <button className=\"btn\" onClick={() => this.props.Parser()}> Run Parser: </button> */}\r\n                            <button className=\"btn\" onClick={() => this.props.Parser()}> Get Weights: </button>\r\n                            <button className=\"btn\" onClick={() => this.props.loadCorpus()}> Load Weights: </button>\r\n                        </div>\r\n                        <div className=\"modeBtn\">\r\n                            &nbsp;\r\n                            {/* <button className=\"btn\" onClick={() => this.props.Parser()}> Run Parser: </button> */}\r\n                            <button className=\"btn\" onClick={() => this.props.saveWeight()}> Save Weights: </button>\r\n                        </div>\r\n                        <h6 className=\"centered\"> Select terms to remove </h6>\r\n                        <table className=\"table table-hover tableBody t1\">\r\n                            <thead className=\"table-light\">\r\n                                <tr>\r\n                                    <th className=\"cell-align-middle centered tableHeader\">NOUN</th>\r\n                                    <th className=\"cell-align-middle centered tableHeader\">FREQUENCY</th>\r\n                                    <th className=\"cell-align-middle centered tableHeader\">WEIGHT</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Object.keys(this.props.weights).length === 0 ?\r\n                                    <tr>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                    : this.renderTable()} \r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"btnLeft\">\r\n                            <button className=\"bottom3 btn\" onClick={() => this.props.prevPage()}> Back </button>\r\n                        </div>\r\n\r\n                        <div className=\"btnCenter centered\">\r\n                            {this.state.page == 0 ?\r\n                                <button className=\"btn\" disabled={true} onClick={() => this.page('pervious')}> Previous: </button> :\r\n                                <button className=\"btn\" onClick={() => this.page('pervious')}> Previous: </button>\r\n                            }\r\n                            {this.state.page}\r\n                            {(this.state.page * 100) + 100 < Object.keys(this.props.weights).length ?\r\n                                <button className=\"btn\" onClick={() => this.page('next')}> Next: </button>:\r\n                                <button className=\"btn\" disabled={true} onClick={() => this.page('next')}> Next: </button>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"btnRight\">\r\n                            <button className=\"right bottom3 btn\" onClick={() =>  {this.props.nextPage()}}> Forward </button>\r\n                            {this.state.selectedTerms.length != 0 ?\r\n                                <button className=\"right bottom3 btn\" onClick={() => this.clearSelected()}> Clear Selected </button> :\r\n                                <button disabled={true} className=\"right bottom3 btn\" onClick={() => this.clearSelected()}> Clear Selected </button>\r\n                            }\r\n                            {this.state.selectedTerms.length != 0 ?\r\n                                <button className=\"right bottom3 btn\" onClick={() => this.deleteTerms()}> Delete Terms </button> :\r\n                                <button disabled={true} className=\"right bottom3 btn\" onClick={() => this.deleteTerms()}> Delete Terms </button>\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Terms;"]},"metadata":{},"sourceType":"module"}